{% extends 'lay_iridian.html.twig' %}
{% set lc = app.request.locale() %}
{% set lc = app.request.locale %}
{% set cu = app.request.locale | capitalize %}

{% block stylesheets %}
    <link href="{{ asset('css/header-view.css') }}" rel="stylesheet">
    {{ parent() }}
    <link href="{{ asset('css/home.css') }}" rel="stylesheet">
{% endblock %}

{% block content %}
    <section class="home scroll-section">


        <div class="terminos">
            <h1>{{ qi.textoDB(llave) }}</h1>
            {{ qi.textoBigDB(llave)|raw }}
        </div>

    </section>


{% endblock %}

{% block javascripts %}

    <script type="text/javascript">


        // 2. This code loads the IFrame Player API code asynchronously.
        var tag = document.createElement('script');

        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        // 3. This function creates an <iframe> (and YouTube player)
        //    after the API code downloads.
        var player;
        var e;
        function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                height: '360',
                width: '640',
                videoId: '{{ qi.textoDB("video-home") }}',
                events: {
                    'onReady': onPlayerReady
                },
                playerVars: {
                    'autoplay': 0,
                    'modestbranding': 1,
                    'controls': 0,
                    'rel': 0,
                }
            });
        }

        // 4. The API will call this function when the video player is ready.
        function onPlayerReady(event) {
            e = event;
            //event.target.playVideo();
        }
        
        function ocultarPreview() {
            /*TweenMax.to($('.wr_video'), 0.5, {opacity: 0});*/

            var panel = $('.wr_video');

            var tl = new TimelineMax({delay:0.5});

            tl.to(panel, 0.5, {opacity:0})
                .to(panel, 0.5, {display: 'none'});

        }

        function reproducir() {
            e.target.playVideo();
            ocultarPreview();
        }

        $('.promociones').parallax({imageSrc: '{{ qi.imagen('fondo_promociones') }}'});



    </script>
{% endblock %}
